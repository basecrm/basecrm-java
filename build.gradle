apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'groovy'
apply plugin: 'maven-publish'
apply plugin: 'signing'

sourceCompatibility = 1.6
targetCompatibility = 1.6
version = '1.5.1-SNAPSHOT'
group = 'com.getbase'

repositories {
    mavenCentral()
    maven {
        url "https://jitpack.io"
    }
}

dependencies {
    compile group: "org.glassfish.jersey.core", name: "jersey-client", version: "2.17"
    compile group: "com.fasterxml.jackson.core", name: "jackson-databind", version: "2.5.0"
    compile group: "joda-time", name: "joda-time", version: "2.3"
    compile group: "com.fasterxml.jackson.datatype", name: "jackson-datatype-joda", version: "2.0.4"
    compile group: "org.slf4j", name: "slf4j-api", version: "1.7.12"

    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: "org.spockframework", name: "spock-core", version: "1.0-groovy-2.4"
    testCompile group: "cglib", name: "cglib-nodep", version: "3.1"
    testCompile group: "org.objenesis", name: "objenesis-parent", version: "1.2"
    testCompile group: "ch.qos.logback", name: "logback-classic", version: "1.1.3"
    testCompile group: "com.google.guava", name: "guava", version: "23.0"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar, javadocJar
}

ext["signing.keyId"] = System.getenv('SIGNING_KEY_ID')
ext["signing.password"] = System.getenv('SIGNING_PASSWORD')
ext["signing.secretKeyRingFile"] = System.getenv('SIGNING_SECRET_KEY_RING_FILE')
ext["ossrhUsername"] = System.getenv('OSSRH_USERNAME')
ext["ossrhPassword"] = System.getenv('OSSRH_PASSWORD')
ext["sonatypeStagingProfileId"] = System.getenv('SONATYPE_STAGING_PROFILE_ID')

publishing {
    publications {
        maven(MavenPublication) {
            from components.java

            artifact sourcesJar
            artifact javadocJar

            pom {
                name = 'basecrm-java'
                packaging = 'jar'
                description = 'BaseCRM Official API V2 library client for Java'
                url = 'https://github.com/zendesk/basecrm-java'

                scm {
                    connection = 'scm:git:git://github.com/zendesk/basecrm-java.git'
                    developerConnection = 'scm:git:ssh://github.com:zendesk/basecrm-java.git'
                    url = 'https://github.com/zendesk/basecrm-java'
                }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'iaintshine'
                        name = 'Boguslaw Mista'
                        email = 'bmista@zendesk.com'
                        organization = 'Zendesk'
                        organizationUrl = 'https://zendesk.com'
                    }
                    developer {
                        id = 'pawelgocek'
                        name = 'Pawel Gocek'
                        email = 'pgocek@zendesk.com'
                        organization = 'Zendesk'
                        organizationUrl = 'https://zendesk.com'
                    }
                    developer {
                        id = 'lukasz-raduj'
                        name = 'Lukasz Raduj'
                        email = 'lraduj@zendesk.com'
                        organization = 'Zendesk'
                        organizationUrl = 'https://zendesk.com'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            String releaseUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            String snapshotUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
            url = version.endsWith('SNAPSHOT') ? snapshotUrl : releaseUrl

            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }
}

signing {
    required { !version.endsWith('SNAPSHOT') }
    sign publishing.publications
}

publish {
    doLast {
        println "The published version: ${version}"
    }
}

test {
    if (!System.getenv('BASECRM_ACCESS_TOKEN')) {
        //put your access token here
        environment 'BASECRM_ACCESS_TOKEN': ''
    }
}
